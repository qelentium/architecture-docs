#######################################
мотивация
#######################################

Движение децентрализации амбициозно и обеспечит огромные возможности для новых социальных и экономических взаимодействий. Децентрализация также обеспечивает противовес злоупотреблениям и коррупции, которые иногда происходят в крупных организациях, где сосредоточена власть. Децентрализация поддерживает самоопределение и права отдельных лиц на самоорганизацию. Разумеется, реалии более децентрализованного мира также будут иметь свои испытания и проблемы, такие как удовлетворение потребностей международного права, общественного блага и сострадания будут важны.

Мы восхищаемся удивительными инновациями Bitcoin, Ethereum и других платформ, которые резко продвинули состояние децентрализованных систем и открыли новый век криптовалютности и умных контрактов. Однако мы также видим признаки того, что эти проекты не использовали лучшие инженерные и формальные модели для масштабности и правильности, чтобы поддерживать критически важные решения. Продолжающиеся дебаты о масштабности и надежности являются симптомами основополагающих архитектурных проблем. Например, является ли  конструкция надежной чтобы распределять на явном упорядоченном порядке обработки, все транзакции блокчинов, проводимых на планете Земля?

Чтобы стать решением блокчейнов с утилитой промышленного масштаба, RChain должен обеспечить доставку контента в масштабе Facebook и поддерживать транзакции со скоростью Visa. После должного внимания к текущему состоянию многих проектов блокчейнов , после глубокого сотрудничества с другими разработчиками блокчейнов и после понимания их соответствующих путей, мы пришли к выводу, что текущие и краткосрочные архитектуры Блокчейнов не могут удовлетворить эти требования. В середине 2016 года мы решили построить лучшую архитектуру блокчейн.

Вместе с индустрией блокчейнов мы все еще находимся на заре этого децентрализованного движения. Настало время заложить прочную архитектурную основу. Путешествие вперед для тех, кто разделяет это амбициозное видение, столь же сложно, как и стоит, и этот документ обобщает это видение и то, как мы стремимся к его достижению.

#######################################
Подход
#######################################
Мы начали с принятия следующих минимальных требований:

* Динамические, отзывчивые и доказуемо правильные умные контракты.

* Параллельное выполнение независимых умных контрактов.

* Разделение данных для уменьшения ненужного распределения данных, или иначе независимых токенов и умныхконтрактов.

* Динамичная и оперативная связь между узлами.

* Расчетно-неинтенсивный консенсус / протокол проверки.

Создание качественного программного обеспечения является сложным. Легче построить «умное» программное обеспечение; однако получающееся в результате программное обеспечение часто имеет низкое качество, пронизано ошибками, трудно поддерживается и трудно развивается. Следтсвие и работа над таким программным обеспечением могут быть адскими для разработчиков, не говоря уже о их клиентах. При создании системы с открытым исходным кодом для поддержки критически важной экономики мы отвергаем подход минимального успеха в пользу сквозной корректности.

Для выполнения вышеуказанных требований наш подход к дизайну направлен на:

* Вычислительные модели, которые предполагают мелкозернистую масштабность и динамичную топологию сети.
* Комбинирование и динамичость схема адресации ресурсов.
* Парадигму функционального программирования, поскольку она более естественно учитывает распределенную и параллельную обработку.
* Формально проверенные протоколы по построению, которые используют проверку модели и доказательство теоремы.
* Принципы интенции и композиционности.

